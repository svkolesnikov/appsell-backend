---

- hosts: all
  become_user: root

  vars_prompt:

    - name: app_env
      prompt: Symfony env value (dev|prod)
      private: no

  vars:
    registry_host: 10.1.4.5
    registry_port: 5000
    var_dir: /datadrive/app/backend/var

  tasks:

    - name: Создание каталога var
      file:
        state: directory
        name: "{{ var_dir }}"

    - name: app - fpm
      docker_container:
        pull: yes
        name: appsell_backend_fpm
        image: "{{ registry_host }}:{{ registry_port }}/backend/app"
        state: started
        recreate: yes
        restart_policy: unless-stopped
        hostname: "{{ ansible_hostname }}.backend.app"
        dns_servers: ["8.8.8.8", "8.8.4.4"]
        volumes: ["{{ var_dir }}:/var/www/app/var"]
        env:
          APP_ENV: "{{ app_env }}"
          APP_LOCALE: "ru"
          APP_SECRET: "86e7b44293d50666286e7b44293d5066620c4381b619a9cfea7bf5ec20c4381b619a9cfea7bf5ec2"
          DATABASE_URL: "pgsql://backend:Wq2v9LV4UP@10.1.4.5:5432/appsell"
          MAILER_URL: "gmail://appsell@sixdays.ru:%H$b2Bp2[vMcPL5@smtp.gmail.com:465?encryption=ssl"
          CORS_ALLOW_ORIGIN: "^https?://localhost:?[0-9]*$"

    - name: app - swagger ui
      docker_container:
        pull: yes
        name: appsell_backend_swagger_ui
        image: "swaggerapi/swagger-ui"
        state: started
        recreate: yes
        restart_policy: unless-stopped
        env:
          API_URL: "http://95.163.215.203/api/swagger"

    - name: app - nginx
      docker_container:
        pull: yes
        name: appsell_backend_nginx
        image: "{{ registry_host }}:{{ registry_port }}/backend/nginx"
        state: started
        restart_policy: unless-stopped
        recreate: yes
        ports:
          - 8001:80
        #dns_servers: ["{{ ansible_docker0.ipv4.address }}"]
        volumes_from:
          - appsell_backend_fpm
        links:
          - appsell_backend_fpm:php-fpm
          - appsell_backend_swagger_ui:swagger-ui