security:
    encoders:
        App\Entity\User:
            algorithm: bcrypt

    providers:
        access_token_provider:
            id: App\Security\AccessTokenUserProvider
        database_provider:
            entity:
                class: App\Entity\User
                property: email
                manager_name: appsell

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        api:
            # Если не передан токен, то юзер будет аноним
            # и если что, его отошъет фаервол дальше там
            anonymous: true
            pattern: ^/api
            stateless: true
            provider: access_token_provider
            simple_preauth:
                authenticator: App\Security\AccessTokenAuthenticator

        main:
            anonymous: true

            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: true
            # https://symfony.com/doc/current/security/form_login_setup.html

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:

        # REST API rules
        - { path: ^/api/auth/token, role: ROLE_USER }
        - { path: ^/api/auth,       role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/index.[^/], role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api.+,          role: ROLE_USER }
        - { path: ^/api,            role: IS_AUTHENTICATED_ANONYMOUSLY }

        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
