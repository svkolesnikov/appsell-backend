security:
    encoders:
        App\Entity\User:
            algorithm: bcrypt

    providers:
        access_token_provider:
            id: App\Security\AccessTokenUserProvider
        database_provider:
            entity:
                class: App\Entity\User
                property: email
                manager_name: appsell

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        api:
            # Если не передан токен, то юзер будет аноним
            # и если что, его отошъет фаервол дальше там
            anonymous: true
            pattern: ^/api
            stateless: true
            provider: access_token_provider
            simple_preauth:
                authenticator: App\Security\AccessTokenAuthenticator

        admin:
            switch_user:      false
            context:          user
            pattern:          ^/admin.*
            form_login:
                provider:     database_provider
                login_path:     /admin/login
                check_path:     /admin/login
                default_target_path: /admin/dashboard
            logout:
                path:           /admin/logout
                target:         /admin/login
            anonymous:        true

        main:
            anonymous: true

            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: true
            # https://symfony.com/doc/current/security/form_login_setup.html

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:

        # REST API rules
        - { path: ^/api/auth/login,          role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/swagger,             role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/doc,                 role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/sdk,                 role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/referral-links/\d+$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/registration,        role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api.*,                   role: ROLE_USER }

        # Admin login page needs to be accessed without credential
        - { path: ^/admin/login$,       role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/logout$,      role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/login_check$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/resetting,    role: IS_AUTHENTICATED_ANONYMOUSLY }

        # Secured part of the site
        # This config requires being logged for the whole site and having the admin role for the admin part.
        # Change these rules to adapt them to your needs
        - { path: ^/admin/, role: [ROLE_USER] }

        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
